{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","children","style","display","width","height","objectFit","margin","alt","src","img","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","results","map","_transformCharacter","getAllComics","_transformComics","getTotalCharacters","total","getTotalComics","getCharacter","id","getComics","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","slice","title","pageCount","language","textObjects","price","prices","ErrorBoundary","state","errorInfo","console","log","this","setState","props","Component","AppBanner","className","avengers","avengersLogo","View","comicsItems","comicsList","i","CSSTransition","timeout","classNames","to","TransitionGroup","component","ComicsList","setComicsList","newItemLoading","setNewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","updateComicsList","onComicsListLoaded","newComicsList","totalComics","ended","characters","then","catch","errorMessage","spinner","Spinner","disabled","onClick","onRequest","ComicsPage"],"mappings":"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","file":"static/js/6.4a9c2fa5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = ({ children }) => {\r\n  return (\r\n    <>\r\n      <img\r\n        style={{\r\n          display: 'block',\r\n          width: '250px',\r\n          height: '250px',\r\n          objectFit: 'contain',\r\n          margin: '0 auto'\r\n        }}\r\n        alt=\"error\"\r\n        src={img}\r\n      />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = '5fb08fddb575a55d82219f9e2320f5e7';\r\n  const _baseOffset = 210;\r\n  const _baseComicsOffset = 0;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&apikey=${_apiKey}`\r\n    );\r\n\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getAllComics = async (offset = _baseComicsOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?limit=8&offset=${offset}&apikey=${_apiKey}`\r\n    );\r\n\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getTotalCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&apikey=${_apiKey}`\r\n    );\r\n\r\n    return res.data.total;\r\n  };\r\n\r\n  const getTotalComics = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?limit=8&offset=${offset}&apikey=${_apiKey}`\r\n    );\r\n\r\n    return res.data.total;\r\n  };\r\n\r\n  const getCharacter = async id => {\r\n    const res = await request(`${_apiBase}characters/${id}?apikey=${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getComics = async id => {\r\n    const res = await request(`${_apiBase}comics/${id}?apikey=${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = char => {\r\n    return {\r\n      name: char.name,\r\n      description: char.description,\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      id: char.id,\r\n      comics: char.comics.items.slice(0, 10)\r\n    };\r\n  };\r\n\r\n  const _transformComics = comics => {\r\n    return {\r\n      name: comics.title,\r\n      description: comics.description || 'No description',\r\n      pageCount: comics.pageCount\r\n        ? comics.pageCount + ' pages'\r\n        : 'No Information',\r\n      language: comics.textObjects[0]?.language || 'en-us',\r\n      price: comics.prices[0].price\r\n        ? comics.prices[0].price + '$'\r\n        : 'NOT AVAILABLE',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      id: comics.id\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    getTotalCharacters,\r\n    getAllCharacters,\r\n    getTotalComics,\r\n    getCharacter,\r\n    getComics,\r\n    getAllComics,\r\n    clearError\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = 'GET',\r\n      body = null,\r\n      headers = {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        setLoading(false);\r\n        return data;\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(error.message);\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { loading, error, getTotalComics, getAllComics } = useMarvelService();\n\n  useEffect(() => {\n    updateComicsList();\n  }, []);\n\n  const onRequest = offset => {\n    setNewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = async newComicsList => {\n    let totalComics = await getTotalComics();\n    let ended = false;\n    if (totalComics - 8 <= offset) {\n      ended = true;\n    }\n\n    setComicsList(characters => [...characters, ...newComicsList]);\n    setNewItemLoading(false);\n    setOffset(offset => offset + 8);\n    setComicsEnded(ended);\n  };\n\n  const updateComicsList = () => {\n    getAllComics()\n      .then(onComicsListLoaded)\n      .catch(() => setComicsEnded(true));\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"comics__list\">\n      {errorMessage}\n      {spinner}\n      <View comicsList={comicsList} />\n      <button\n        style={{ display: comicsEnded ? 'none' : 'block' }}\n        disabled={newItemLoading}\n        onClick={() => {\n          onRequest(offset);\n        }}\n        className=\"button button__main button__long\"\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nconst View = ({ comicsList }) => {\n  const comicsItems = comicsList.map(({ name, thumbnail, price, id }, i) => {\n    const duration = 500;\n\n    return (\n      <CSSTransition key={id} timeout={duration} classNames=\"csstransition\">\n        <li key={i} className=\"comics__item\">\n          <Link to={`/comics/${id}`}>\n            <img src={thumbnail} alt={name} className=\"comics__item-img\" />\n            <div className=\"comics__item-name\">{name}</div>\n            <div className=\"comics__item-price\">{price}</div>\n          </Link>\n        </li>\n      </CSSTransition>\n    );\n  });\n\n  return (\n    <ul className=\"comics__grid\">\n      <TransitionGroup component={null}>{comicsItems}</TransitionGroup>\n    </ul>\n  );\n};\n\nexport default ComicsList;\n","import AppBanner from '../appBanner/AppBanner';\r\nimport ComicsList from '../comicsList/ComicsList';\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <AppBanner />\r\n        <ComicsList />\r\n      </ErrorBoundary>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"sourceRoot":""}