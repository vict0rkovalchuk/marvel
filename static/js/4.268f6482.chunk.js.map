{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","components/pages/404.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/pages/SingleComicsPage.js"],"names":["ErrorMessage","children","style","display","width","height","objectFit","margin","alt","src","img","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","results","map","_transformCharacter","getAllComics","_transformComics","getTotalCharacters","total","getTotalComics","getCharacter","id","getComics","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","slice","title","pageCount","language","textObjects","price","prices","ErrorBoundary","state","errorInfo","console","log","this","setState","props","Component","Page404","history","useHistory","textAlign","fontWeight","fontSize","onClick","goBack","cursor","marginTop","View","thumbnailStyle","className","length","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","mjolnir","characters","onCharSelected","onFocusItem","itemRefs","charactersList","i","CSSTransition","timeout","classNames","ref","el","current","tabIndex","onKeyDown","e","key","TransitionGroup","component","CharList","setCharacters","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","updateCharacters","onCharactersLoaded","newCharacters","totalCharacters","ended","useRef","catch","itemId","forEach","item","classList","remove","add","focus","disabled","onRequest","Skeleton","comicsList","resourceURI","split","pop","to","CharInfo","charId","skeleton","MainPage","selectedChar","setSelectedChar","decoration","AppBanner","avengers","avengersLogo","comicsItems","ComicsList","setComicsList","comicsEnded","setComicsEnded","updateComicsList","onComicsListLoaded","newComicsList","totalComics","ComicsPage","comic","SingleComicsPage","comicId","useParams","setComic","updateComics","onComicsLoaded"],"mappings":"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","file":"static/js/4.268f6482.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = ({ children }) => {\r\n  return (\r\n    <>\r\n      <img\r\n        style={{\r\n          display: 'block',\r\n          width: '250px',\r\n          height: '250px',\r\n          objectFit: 'contain',\r\n          margin: '0 auto'\r\n        }}\r\n        alt=\"error\"\r\n        src={img}\r\n      />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = '5fb08fddb575a55d82219f9e2320f5e7';\r\n  const _baseOffset = 210;\r\n  const _baseComicsOffset = 0;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&apikey=${_apiKey}`\r\n    );\r\n\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getAllComics = async (offset = _baseComicsOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?limit=8&offset=${offset}&apikey=${_apiKey}`\r\n    );\r\n\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getTotalCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&apikey=${_apiKey}`\r\n    );\r\n\r\n    return res.data.total;\r\n  };\r\n\r\n  const getTotalComics = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?limit=8&offset=${offset}&apikey=${_apiKey}`\r\n    );\r\n\r\n    return res.data.total;\r\n  };\r\n\r\n  const getCharacter = async id => {\r\n    const res = await request(`${_apiBase}characters/${id}?apikey=${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getComics = async id => {\r\n    const res = await request(`${_apiBase}comics/${id}?apikey=${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = char => {\r\n    return {\r\n      name: char.name,\r\n      description: char.description,\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      id: char.id,\r\n      comics: char.comics.items.slice(0, 10)\r\n    };\r\n  };\r\n\r\n  const _transformComics = comics => {\r\n    return {\r\n      name: comics.title,\r\n      description: comics.description || 'No description',\r\n      pageCount: comics.pageCount\r\n        ? comics.pageCount + ' pages'\r\n        : 'No Information',\r\n      language: comics.textObjects[0]?.language || 'en-us',\r\n      price: comics.prices[0].price\r\n        ? comics.prices[0].price + '$'\r\n        : 'NOT AVAILABLE',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      id: comics.id\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    getTotalCharacters,\r\n    getAllCharacters,\r\n    getTotalComics,\r\n    getCharacter,\r\n    getComics,\r\n    getAllComics,\r\n    clearError\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = 'GET',\r\n      body = null,\r\n      headers = {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        setLoading(false);\r\n        return data;\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(error.message);\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Page404 = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <ErrorMessage>\r\n        <p\r\n          style={{ textAlign: 'center', fontWeight: 'bold', fontSize: '24px' }}\r\n        >\r\n          Page doesn't exist\r\n        </p>\r\n        <div\r\n          onClick={() => history.goBack()}\r\n          style={{\r\n            cursor: 'pointer',\r\n            display: 'block',\r\n            textAlign: 'center',\r\n            fontWeight: 'bold',\r\n            fontSize: '24px',\r\n            marginTop: '30px'\r\n          }}\r\n        >\r\n          Go Back\r\n        </div>\r\n      </ErrorMessage>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n  const [char, setChar] = useState({});\n\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, []);\n\n  const onCharLoaded = char => setChar(char);\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    getCharacter(id).then(onCharLoaded);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"randomchar\">\n      {errorMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button onClick={updateChar} className=\"button button__main\">\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char;\n\n  const thumbnailStyle =\n    thumbnail ===\n    'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n      ? {\n          objectFit: 'contain'\n        }\n      : null;\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        style={thumbnailStyle}\n        src={thumbnail}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">\n          {!description\n            ? 'No Description'\n            : description.length >= 10\n            ? description.slice(0, 100) + '...'\n            : description}\n        </p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nconst CharList = ({ onCharSelected }) => {\n  const [characters, setCharacters] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const { loading, error, getTotalCharacters, getAllCharacters } =\n    useMarvelService();\n\n  useEffect(() => {\n    updateCharacters();\n  }, []);\n\n  const onRequest = offset => {\n    setNewItemLoading(true);\n    getAllCharacters(offset).then(onCharactersLoaded);\n  };\n\n  const onCharactersLoaded = async newCharacters => {\n    let totalCharacters = await getTotalCharacters();\n    let ended = false;\n    if (totalCharacters - 9 <= offset) {\n      ended = true;\n    }\n\n    setCharacters(characters => [...characters, ...newCharacters]);\n    setNewItemLoading(false);\n    setOffset(offset => offset + 9);\n    setCharEnded(ended);\n  };\n\n  const itemRefs = useRef([]);\n\n  const onFocusItem = itemId => {\n    itemRefs.current.forEach(item =>\n      item.classList.remove('char__item_selected')\n    );\n    itemRefs.current[itemId].classList.add('char__item_selected');\n    itemRefs.current[itemId].focus();\n  };\n\n  const updateCharacters = () => {\n    getAllCharacters()\n      .then(onCharactersLoaded)\n      .catch(() => setCharEnded(true));\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"char__list\">\n      {errorMessage}\n      {spinner}\n      <View\n        onFocusItem={onFocusItem}\n        onCharSelected={onCharSelected}\n        characters={characters}\n        itemRefs={itemRefs}\n      />\n      <button\n        style={{ display: charEnded ? 'none' : 'block' }}\n        disabled={newItemLoading}\n        onClick={() => {\n          onRequest(offset);\n        }}\n        className=\"button button__main button__long\"\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func\n};\n\nconst View = ({ characters, onCharSelected, onFocusItem, itemRefs }) => {\n  const charactersList = characters.map(({ name, thumbnail, id }, i) => {\n    const thumbnailStyle =\n      thumbnail ===\n        'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ||\n      thumbnail ===\n        'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'\n        ? {\n            objectFit: 'fill'\n          }\n        : null;\n\n    const duration = 500;\n\n    return (\n      <CSSTransition key={id} timeout={duration} classNames=\"csstransition\">\n        <li\n          ref={el => (itemRefs.current[i] = el)}\n          tabIndex={0}\n          onClick={() => {\n            onCharSelected(id);\n            onFocusItem(i);\n          }}\n          onKeyDown={e => {\n            if (e.key === ' ' || e.key === 'Enter') {\n              onCharSelected(id);\n              onFocusItem(i);\n            }\n          }}\n          key={id}\n          className=\"char__item\"\n        >\n          <img style={thumbnailStyle} src={thumbnail} alt={name} />\n          <div className=\"char__name\">{name}</div>\n        </li>\n      </CSSTransition>\n    );\n  });\n\n  return (\n    <ul className=\"char__grid\">\n      <TransitionGroup component={null}>{charactersList}</TransitionGroup>\n    </ul>\n  );\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nconst CharInfo = ({ charId }) => {\n  const [char, setChar] = useState(null);\n\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, [charId]);\n\n  const onCharLoaded = char => {\n    setChar(char);\n  };\n\n  const updateChar = () => {\n    if (!charId) {\n      return;\n    }\n\n    clearError();\n    getCharacter(charId).then(onCharLoaded);\n  };\n\n  const skeleton = char || loading || error ? null : <Skeleton />;\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {errorMessage}\n      {spinner}\n      {content}\n    </div>\n  );\n};\n\nCharInfo.propTypes = {\n  charId: PropTypes.number\n};\n\nconst View = ({ char }) => {\n  const { comics, description, homepage, name, thumbnail, wiki } = char;\n\n  const comicsList = comics.map(({ name, resourceURI }, i) => {\n    const id = resourceURI.split('/').pop();\n    return (\n      <li key={i} className=\"char__comics-item\">\n        <Link className=\"char__comics-link\" to={`/comics/${id}`}>\n          {name}\n        </Link>\n      </li>\n    );\n  });\n\n  const thumbnailStyle =\n    thumbnail ===\n      'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ||\n    thumbnail ===\n      'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'\n      ? {\n          objectFit: 'contain'\n        }\n      : null;\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img style={thumbnailStyle} src={thumbnail} alt={name} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">\n        {!description ? 'No Description' : description}\n      </div>\n      {comicsList.length === 0 ? (\n        <div className=\"char__comics\">Comics not found</div>\n      ) : (\n        <>\n          <div className=\"char__comics\">Comics:</div>\n          <ul className=\"char__comics-list\">{comicsList}</ul>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default CharInfo;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\r\n\r\nimport RandomChar from '../randomChar/RandomChar';\r\nimport CharList from '../charList/CharList';\r\nimport CharInfo from '../charInfo/CharInfo';\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setSelectedChar] = useState(null);\r\n\r\n  const onCharSelected = id => {\r\n    setSelectedChar(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <CharInfo charId={selectedChar} />\r\n        </ErrorBoundary>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { loading, error, getTotalComics, getAllComics } = useMarvelService();\n\n  useEffect(() => {\n    updateComicsList();\n  }, []);\n\n  const onRequest = offset => {\n    setNewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = async newComicsList => {\n    let totalComics = await getTotalComics();\n    let ended = false;\n    if (totalComics - 8 <= offset) {\n      ended = true;\n    }\n\n    setComicsList(characters => [...characters, ...newComicsList]);\n    setNewItemLoading(false);\n    setOffset(offset => offset + 8);\n    setComicsEnded(ended);\n  };\n\n  const updateComicsList = () => {\n    getAllComics()\n      .then(onComicsListLoaded)\n      .catch(() => setComicsEnded(true));\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"comics__list\">\n      {errorMessage}\n      {spinner}\n      <View comicsList={comicsList} />\n      <button\n        style={{ display: comicsEnded ? 'none' : 'block' }}\n        disabled={newItemLoading}\n        onClick={() => {\n          onRequest(offset);\n        }}\n        className=\"button button__main button__long\"\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nconst View = ({ comicsList }) => {\n  const comicsItems = comicsList.map(({ name, thumbnail, price, id }, i) => {\n    const duration = 500;\n\n    return (\n      <CSSTransition key={id} timeout={duration} classNames=\"csstransition\">\n        <li key={i} className=\"comics__item\">\n          <Link to={`/comics/${id}`}>\n            <img src={thumbnail} alt={name} className=\"comics__item-img\" />\n            <div className=\"comics__item-name\">{name}</div>\n            <div className=\"comics__item-price\">{price}</div>\n          </Link>\n        </li>\n      </CSSTransition>\n    );\n  });\n\n  return (\n    <ul className=\"comics__grid\">\n      <TransitionGroup component={null}>{comicsItems}</TransitionGroup>\n    </ul>\n  );\n};\n\nexport default ComicsList;\n","import AppBanner from '../appBanner/AppBanner';\r\nimport ComicsList from '../comicsList/ComicsList';\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <AppBanner />\r\n        <ComicsList />\r\n      </ErrorBoundary>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport { Page404 } from '../pages';\r\n\r\nimport './singleComicsPage.scss';\r\n\r\nconst SingleComicsPage = () => {\r\n  const { comicId } = useParams();\r\n  const [comic, setComic] = useState(null);\r\n\r\n  const { loading, error, getComics, clearError } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateComics();\r\n  }, [comicId]);\r\n\r\n  const onComicsLoaded = comics => {\r\n    setComic(comics);\r\n  };\r\n\r\n  const updateComics = () => {\r\n    clearError();\r\n    getComics(comicId).then(onComicsLoaded);\r\n  };\r\n\r\n  const errorMessage = error ? <Page404 /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\r\n\r\n  return (\r\n    <>\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </>\r\n  );\r\n};\r\n\r\nconst View = ({ comic }) => {\r\n  const { name, description, pageCount, language, price, thumbnail } = comic;\r\n\r\n  return (\r\n    <div className=\"single-comic\">\r\n      <img src={thumbnail} alt={name} className=\"single-comic__img\" />\r\n      <div className=\"single-comic__info\">\r\n        <h2 className=\"single-comic__name\">{name}</h2>\r\n        <p className=\"single-comic__descr\">{description}</p>\r\n        <p className=\"single-comic__descr\">{pageCount}</p>\r\n        <p className=\"single-comic__descr\">Language: {language}</p>\r\n        <div className=\"single-comic__price\">{price}</div>\r\n      </div>\r\n      <Link to=\"/comics\" className=\"single-comic__back\">\r\n        Back to all\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleComicsPage;\r\n"],"sourceRoot":""}